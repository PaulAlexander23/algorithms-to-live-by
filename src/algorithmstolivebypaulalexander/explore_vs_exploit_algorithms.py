#!/usr/bin/python3

import numpy as np
from algorithmstolivebypaulalexander.restuarant import restuarant
from algorithmstolivebypaulalexander.explore_vs_exploit_problem import explore_vs_exploit_problem

class algorithm:
    def __init__(self):
        pass

    def solve(self, problem):
        pass

class random_algorithm(algorithm):
    def __init__(self):
        pass

    def solve(self, problem):
        # For the N visits to the restuarants, randomly select a restuarant to visit
        # add the score of the visit to the total score
        total_score = 0

        for i in range(problem.N):
            n = np.random.randint(0, len(problem.restuarants))

            if problem.restuarants[n].visit():
                total_score += 1

        return total_score


class user_select_algorithm(algorithm):
    def __init__(self):
        pass

    def solve(self, problem):
        # For the N visits to the restuarants, the user selects a restuarant to visit
        # add the score of the visit to the total score
        total_score = 0

        for i in range(problem.N):
            n = int(input("Which restuarant do you want to visit? (1,2,...," + str(len(problem.restuarants)) + ") ")) + 1

            if problem.restuarants[n].visit():
                total_score += 1

        return total_score


class win_stick_lose_switch(algorithm):
    def __init__(self):
        pass

    def solve(self, problem):
        # For the N visits to the restuarants, stick with one that wins until it losses
        # add the score of the visit to the total score
        total_score = 0
        current_restuarant = 0

        for i in range(problem.N):
            if problem.restuarants[current_restuarant].visit():
                total_score += 1
            else:
                current_restuarant = (current_restuarant + 1) % len(problem.restuarants)

        return total_score

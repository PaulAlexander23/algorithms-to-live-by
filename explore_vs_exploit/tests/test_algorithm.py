import pytest
from unittest.mock import patch
from explore_vs_exploit.restuarant import restuarant
from explore_vs_exploit.explore_vs_exploit_problem import explore_vs_exploit_problem
from explore_vs_exploit.algorithms import random_algorithm, user_select_algorithm, win_stick_lose_switch

def test_random_algorithm():
    problem = explore_vs_exploit_problem(5, 5)
    algorithm = random_algorithm()
    score = algorithm.solve(problem)
    assert score >= 0 and score <= 5

def test_user_select_algorithm():
    with patch("builtins.input", side_effect=["0", "0", "0", "0", "0"]):
        problem = explore_vs_exploit_problem(5,5)
        algorithm = user_select_algorithm()
        score = algorithm.solve(problem)
        assert score >= 0 and score <= 5

def test_win_stick_lose_switch():
    problem = explore_vs_exploit_problem(5,5)
    algorithm = win_stick_lose_switch()
    score = algorithm.solve(problem)
    assert score >= 0 and score <= 5
